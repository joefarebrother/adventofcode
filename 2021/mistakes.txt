Day 1:
- Not testing my new input function
- Off by one: finding sliding windows using range(len(in)-3) misses final window (ws)

Day 2:
- += instead of -= (ws)
- misinterpreting instructions (affecting depth in the up/down commands as well as aim) (ws)

Day 3:
- Calculating the most common thing twice instead of most and least common (ws)

Day 4: 
- Getting no sleep
- Spending a long time fiddling about with parsing the input (including thinking the boards were commna seoarated rather than space separated)
- == instead of =

Day 5:
- Wasting time trying to write a regex for the input rather than using my ints_in utility
- `x[0] == x[3] or x[1] == x[2]` doesn't select the lines lol 
- Getting the sign wrong for ranges, leading to them being empty
- Incrementing y before incrementing the grid cell ratehr than after (ws)
- Re-running incorrect jupyter cells that had modified state (ws part 2, slow down part 1)

Day 6:
- None!

Day 7:
- Changing the wrong instance of `inp` to `range(min(inp), max(inp))`
- autotest bug: not using python3.9

Day 8
- Getting no sleep
- autotest bug: doesn't download input file if it exists but is empty
- Taking a long time understanding what the question is saying
- Trying to figure out something clever for part 2 before realising brute force should work
- Not sorting my permuted patterns before checking they were in segs

Day 9:
- Bug in grid.py: defines redundant version of readlines that was not kept up to date

Day 10:
- Taking a long time to type out the dicts of closing brackets and scores
- `process(inp)` rather than `map(process, inp)`

Day 11:
- Using orthoganal neighbours rather than including diagonals
- Flashing at 9 rather than >9

Day 12:
- Worrying about whether i'd need to handle the possiblility of infinite loops
- Misreading the problem: thinking you can visit any number of small nodes twice rather than just 1
- Implementing the check wrong: only checking that the path contains no dupes, whereas duplicate big nodes would incorrectly disallow entry to a small node

Day 13:
- Bugs in utils: grid keys / bounding boxes being stored as floats leading to grid.draw breaking
- line-x rather than 2*line-x

Day 14:
- Getting no sleep
- Splitting on "->" rather than " -> "
- Mistyping b as c
- Using the same name c for multiple things

Day 15:
- Not wrapping modulo 9
- Wrapping modulo 10 rather than 9
- Wrapping modulo 9 incorrectly (range 0-8 rather than 1-9)

Day 16:
- Repeatedly parsing hexidecimal wrong
-- First using bin(int(inp,16))
-- then trying to add leading 0s based on len(inp)%4 
-- then using ljust rather than rjust

Day 17:
- Not parsing negative numbers correctly
- Not considering a large enough range for y (ws; first one since using autotest)
- Not considering the maximum x value