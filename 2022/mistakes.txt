Day 1:
- Forgetting that i renamed groups to inp_groups
- Sorting in the wrong order

Day 2:
- Getting the permutations of the results table wrong several times, leading to 4 wrong submissions
- Misreading the question on which results XYZ mean

Day 3:
- None!

Day 4:
- None!

Day 5:
- Having my groups utility call strip on each group
- Several off-by-ones: creating one too few crates, appending to the wrong crate
- P2: Mixing up the new vs moved crates

Day 6:
- Reading to carefully, thinking part 2 was a little more complex than it was

Day 7:
- Needing to look up dataclasses.field
- Forgetting to count files in my everything_under method
- Missing the last command, causing the example to still pass (ws)
- Missing that I need to free up a certain amount of space rather than just delete a dir over 30000000

Day 8:
- Not checking both `p0 in inp and p0+d in inp`
- Comparing to d rather than p 
- Then comparing adjacent trees rather than to the main tree (`inp[p0+d] >= inp[p0]` rather than `inp[p0+d] >= inp[p]`) 
-- (3s off p1 leaderboard)
- Mistyping [] rather than p

Day 9:
- Waking up late
- Counting the tail's position after completing a full line rather than an individual step

Day 10:
- Copy/pasting the list of expected cycle numbers and missing the 220
- Off by one: outputting on the wrong cycle 
- Not running part 2 up to 240 cycles, and trying to guess what the obscured letters were (ws)
- Mistakes in rendering, leaving it still readable (newline too early in first row, first column is moved to last)
- 2 mistakes that canceled out: when rewriting runner for part 2, I checking x after rather than during the cycle, 
  but also considering the pixels to be in the range 1-40 rather than 0-39; so it was effectively checking where x is next cycle. 
  Net effect was only to chop off the first column, leaving the result still readable.

Day 11:
- Thinking a monkey only processes one item per turn
- Not knowing exec uses the current scope and won't affect the global new
- Reversing the test (if item % self.test, rather than not item % self.test)
- Using acts[:-2] rather than acts[-2:]
- Running for 1000 rounds rather than 10000

Day 12:
- Writing a height of 26 for E rather than 25 (ws)
- Having inefficiencies in my BFS function

Day 13:
- Implementing comparator wrong - returning -1 when list 1 runs out even if p2 has also run out (ws)
- Needing to look up how to sort with a comparator

Day 14:
- Not handling my input correctly (just chunks(ints_in(line), 2); i.e. iterating over points, rather than windows(that,2))
- Getting my condition for checking whether the next position is the lowest backwards 

Day 15:
- Mistyping some of the attributes when copying over and adapting 2021/22
- Not including the full search space 

Day 16:
- Crashing my pc by running out of memory 3 or 4 times

Day 17:
- Checking for each position in the rock to block horizontal movement rather than only #s (ws + TWO HECKING HOURS of debugging + needing to have Toby help)
- Couple off-by-ones in p2 (incrementing time in wrong place; and checking for the rock 1 index too low) (ws*2)

Day 18:
- A couple typos - calling adj2 rather than adj, using c rather than ac

Day 19: 
- Initially misunderstanding the problem (thinking it was a deterministic process)
- Not properly handling format differences between example and real input 
- My program being really slow

Day 20:
- Thinking that the input was unique
- Modulo len(nodes) rather tha len(nodes)-1
- Fiddling about with writing a doubly-linked list rather than just use a direct solution (was pre-prepping for a potential part2 in which the list could have been longer, like 2020/23)

Day 21:
- Taking a long time fiddling about with input parsing with regex + topologically sorting by dependencies 
- Getting the arguments to re.sub wrong
- Not rounding my results (so autotest wouldn't submit them)